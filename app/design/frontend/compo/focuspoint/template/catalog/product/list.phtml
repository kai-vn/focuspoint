<?php
/**
 * @package     compo
 * @copyright   Copyright (c) 2010-2015 MeigeeTeam. (http://www.meigeeteam.com)
 */
?>
<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
?>
<?php
    $_productCollection=$this->getLoadedProductCollection();
    $_helper = $this->helper('catalog/output');
	$meigeeOptions = $this->getLayout();
	$gridColumns = $meigeeOptions->getMConfigResultByAlias('listing_columns');
	$grid_indents = $meigeeOptions->getMConfigResultByAlias('listing_indents');
	$productType = $meigeeOptions->getMConfigResultByAlias('listing_product_type');


	switch ($gridColumns) {
		case 2:
			$gridColumnsClassname = 'two-columns';
		break;
		case 3:
			$gridColumnsClassname = 'three-columns';
		break;
		case 4:
			$gridColumnsClassname = 'four-columns';
		break;
		case 5:
			$gridColumnsClassname = 'five-columns';
		break;
		case 6:
			$gridColumnsClassname = 'six-columns';
		break;
		case 7:
			$gridColumnsClassname = 'seven-columns';
		break;
		case 8:
			$gridColumnsClassname = 'eight-columns';
		break;
		default:
			$gridColumnsClassname = 'three-columns';
		break;
	}
	switch ($productType) {
		case 'catalog/product/grids/default.phtml':
			$gridType = '1';
		break;
		case 'catalog/product/grids/type_2.phtml':
			$gridType = '2';
		break;
		case 'catalog/product/grids/type_3.phtml':
			$gridType = '3';
		break;
		default:
			$gridType = '1';
		break;
	}
?>
<?php if(!$_productCollection->count()): ?>
<p class="note-msg"><?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: ?>
<div class="category-products">
    <?php echo $this->getToolbarHtml() ?>
    <?php // List mode ?>
    <?php if($this->getMode()!='grid'): ?>

    <ol class="products-list quick-view-container" id="products-list">
		<div class="quick-view-data-container"></div>
		<?php foreach ($_productCollection as $_product): ?>
			<?php echo $this->getLayout()->createBlock('page/html')->setProductInfo($_product)->setProductList($this)->setIterator($this)->setTemplate('catalog/product/lists/default.phtml')->toHtml(); ?>
		<?php endforeach; ?>
    </ol>
    <script type="text/javascript">decorateList('products-list', 'none-recursive')</script>
    <?php else: ?>
    <?php // Grid Mode ?>

	<ul class="products-grid row quick-view-container <?php echo 'type-' . $gridType; ?> <?php echo $gridColumnsClassname.''.($grid_indents != 1 ? ' no-indents' : ''); ?>">
		<div class="quick-view-data-container"></div>
		<?php foreach ($_productCollection as $_product): ?>
			<?php echo $this->getLayout()->createBlock('page/html')->setProductInfo($_product)->setProductList($this)->setTemplate($productType)->toHtml(); ?>
        <?php endforeach ?>
	 </ul>
    <script type="text/javascript">
		decorateGeneric($$('ul.products-grid'), ['odd','even','first','last']);
	</script>
    <?php endif; ?>
	<div class="toolbar-bottom">
		 <?php echo $this->getToolbarHtml() ?>
	</div>
	<?php if(Mage::app()->getLayout()->getBlock('ajaxkit')->issetSubmodulesConfig('general_toolbar')) { ?>
		<div class="infinite-scroll-elements">
			<div class="infinite-scroll-loader"><div></div></div>
			<div class="infinite-scroll-button" id="StaticScrollBtn"><?php echo $this->__('Show More Products'); ?></div>
		</div>
	<?php } ?>
</div>
<script type="text/javascript">
	if(jQuery('.category-products li.item .mobile-btn').length){
		jQuery('.mobile-btn').off().on('click', function(){
			if(jQuery(this).parents('.products-grid li.item').hasClass('hover')){
				jQuery(this).parents('.products-grid li.item').removeClass('hover');
			} else {
				jQuery(this).parents('li.item').addClass('hover');
			}
		});
	}
	if(jQuery('.listing-banner').length){
		var mode = jQuery('.listing-banner').data('mode');
		var position = jQuery('.listing-banner').data('position');
		banner = jQuery('.listing-banner');
		banner = banner.wrap("<li class='item listing-banner-wrapper'></li>");
		banner.parent().hide();
		switch (mode){
			case 'grid':
				if(jQuery('.category-products .products-grid').length){
					banner.parent().show();
					jQuery('.products-grid').parents('.col-main').find('.category-description li.item').css('display', 'block');
					jQuery('.products-grid li.item:nth-of-type(' + (position-1) + ')').after(jQuery('.listing-banner-wrapper'));
				}
			break;
			case 'list':
				if(jQuery('.category-products .products-list').length){
					banner.parent().show();
					jQuery('.products-list').parents('.col-main').find('.category-description li.item').css('display', 'block');
					jQuery('.products-list li.item:nth-of-type(' + (position-1) + ')').after(jQuery('.listing-banner-wrapper'));
				}
			break;
		}
	}

</script>
<?php endif; ?>
<?php
// Provides a block where additional page components may be attached, primarily good for in-page JavaScript
if ($this->getChild('after')){
    $_afterChildren = $this->getChild('after')->getSortedChildren();
    foreach ($_afterChildren as $_afterChildName){
        $_afterChild = $this->getChild('after')->getChild($_afterChildName);
        //set product collection on after blocks
        $_afterChild->setProductCollection($_productCollection);
        echo $_afterChild->toHtml();
    }
}
?>
